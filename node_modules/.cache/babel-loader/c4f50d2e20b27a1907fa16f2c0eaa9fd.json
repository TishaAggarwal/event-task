{"ast":null,"code":"/**\n * lucide-react v0.274.0 - ISC\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nconst toKebabCase = string => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef((_ref, ref) => {\n    let {\n      color = \"currentColor\",\n      size = 24,\n      strokeWidth = 2,\n      absoluteStrokeWidth,\n      children,\n      ...rest\n    } = _ref;\n    return createElement(\"svg\", {\n      ref,\n      ...defaultAttributes,\n      width: size,\n      height: size,\n      stroke: color,\n      strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n      className: `lucide lucide-${toKebabCase(iconName)}`,\n      ...rest\n    }, [...iconNode.map(_ref2 => {\n      let [tag, attrs] = _ref2;\n      return createElement(tag, attrs);\n    }), ...((Array.isArray(children) ? children : [children]) || [])]);\n  });\n  Component.displayName = `${iconName}`;\n  return Component;\n};\nexport { createLucideIcon as default, toKebabCase };","map":{"version":3,"mappings":";;;;;;AAsBa,oBAAeA,MAAmB,WAAOC,QAAQ,oBAAsB,SAAO,EAAEC,WAAY;AAEnG,yBAAmB,CAACC,UAAkBC,QAAmC;EAC7E,MAAMC,SAAY,cAChB,OAAiGC,GAC/F;IAAA,IADD;MAAEC,KAAQ;MAAgBC,IAAO;MAAIC,WAAc;MAAGC,mBAAqB;MAAAC;MAAA,GAAaC;IAAK;IAAA,OAC5FC,cACE,OACA;MACEP;MACA,GAAGQ;MACHC,KAAO;MACPC,MAAQ;MACRC,MAAQ;MACRR,aAAaC,sBAAsBQ,MAAO,YAAW,IAAI,EAAK,UAAOV,IAAI,CAAI;MAC7EW,WAA4B,6BAAYhB,QAAQ;MAChD,GAAGS;IACL,GACA,CACE,GAAGR,QAAS,KAAI;MAAA,IAAC,CAACgB,GAAK,OAAK,CAAM;MAAA,qBAAcA,GAAK,OAAK,CAAC;IAAA,IAC3D,KACGC,MAAMC,OAAQ,SAAQ,IAAIX,QAAW,IAACA,QAAQ,MAAM,EAAC,EAE1D,CACF;EAAA,EACJ;EAEAN,UAAUkB,cAAiB;EAEpB;AACT","names":["string","replace","toLowerCase","iconName","iconNode","Component","ref","color","size","strokeWidth","absoluteStrokeWidth","children","rest","createElement","defaultAttributes","width","height","stroke","Number","className","tag","Array","isArray","displayName"],"sources":["E:\\last-final-task\\Event-Project\\node_modules\\lucide-react\\src\\createLucideIcon.ts"],"sourcesContent":["import { forwardRef, createElement, ReactSVG, SVGProps, ForwardRefExoticComponent, RefAttributes } from 'react';\nimport defaultAttributes from './defaultAttributes';\n\nexport type IconNode = [elementName: keyof ReactSVG, attrs: Record<string, string>][]\n\nexport type SVGAttributes = Partial<SVGProps<SVGSVGElement>>\ntype ComponentAttributes = RefAttributes<SVGSVGElement> & SVGAttributes\n\nexport interface LucideProps extends ComponentAttributes {\n  size?: string | number\n  absoluteStrokeWidth?: boolean\n}\n\nexport type LucideIcon = ForwardRefExoticComponent<LucideProps>;\n/**\n * Converts string to KebabCase\n * Copied from scripts/helper. If anyone knows how to properly import it here\n * then please fix it.\n *\n * @param {string} string\n * @returns {string} A kebabized string\n */\nexport const toKebabCase = (string: string) => string.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n\nconst createLucideIcon = (iconName: string, iconNode: IconNode): LucideIcon => {\n  const Component = forwardRef<SVGSVGElement, LucideProps>(\n    ({ color = 'currentColor', size = 24, strokeWidth = 2, absoluteStrokeWidth, children, ...rest }, ref) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes,\n          width: size,\n          height: size,\n          stroke: color,\n          strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n          className: `lucide lucide-${toKebabCase(iconName)}`,\n          ...rest,\n        },\n        [\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(\n            (Array.isArray(children) ? children : [children]) || []\n          )\n        ],\n      ),\n  );\n\n  Component.displayName = `${iconName}`;\n\n  return Component;\n};\n\nexport default createLucideIcon\n"]},"metadata":{},"sourceType":"module"}